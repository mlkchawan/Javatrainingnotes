
===================== day 43 ============================

Pre requistics for the react :


Node js

google chrome

vs code

ES6 0r Type script.


reactnative

promise

arrays,string api

json.stringfy

strict mode

babel
bag

optimistic and pessimistic locking
virtual DOM

DOm

=======================================================

CREATING THE PROJECT FOR NODE JS ::   (from start)

npm install -g eslint
npm install -g typescript
npm install -g babel
 
go to environment variables and set node path
exit the existing cmd and open new cmd

mkdir reacthelloworld
cd reacthelloworld
npx create-react-app hello-world-example
 
cls
 
cd hello-world-example
npm start

has context menu

D:\reacthelloworld>cd hello-world-example

D:\reacthelloworld\hello-world-example>npm start


webpack compiled with 1 warning
Terminate batch job (Y/N)? y

D:\reacthelloworld\hello-world-example>
=======================================================


        CREATING A NEW PROJECT IN THE EXISTING PACKAGE
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

> cd reacthelloworld
>  npx create-react-app hello-world-example
 
cls
 
cd hello-world-example
npm start

has context menu

D:\reacthelloworld>cd hello-world-example

D:\reacthelloworld\hello-world-example>npm start


webpack compiled with 1 warning
Terminate batch job (Y/N)? y
=======================================================


1. STRICT NODE

2. ES6 TYpescript

3. Modules 

4.Virtual Dom


>> For unit testing protactor for the  Springboot 
=======================================================

>> Java throws compilation errors

>>  Java Script throws silent errors. If any error present in the code it will not show but it will fail in the production server 
>>  Silent errors are not visible 
>>  In React js  we always enable  the STRICT NODE 
>>  If we run the code in the strict mode it will throw errors .
>>  STRICT MODE IS PART OF JS.
>>  

=======================================================
 		MODULES :


>>   it is same as the package in java

>>  module is collection of classess ,functions ,variables 

>>   it has only import  and Export

>>   if you want to use a parcicular module we are using key word        """import  """

>>  Export means making module export it will be used in another module 

>>  if we want to   

=======================================================
		VIRTUAL DOM

>>  Every browder will have DOM 
>>  when you want to create a xml it will create a tree

>> parent --------------->window -------------->documents -==->form 

>> browser will create a tree

>> if we want to  modify the webpage or runtime on any node.


whenevr we want to run on br0wser
>> uing 


>> if we want to modufy the webpage to any timw or at run time on any node, tie or at run time on any node ,it is very easy with  virtual  DOM 

It is light weight version of Dom .

>> Dom is more time consuming 

>>  Rendering: Adding something to the existing  web page. { like update / delete/ edit}. 
                   or

Updating changes to Webpage is called as RENDERING.
or making changes to a webpage is called as rendering

>> So to avoid this we are using virtual DOM 

var a=[1,3]

var b=[1,2,3]

Evry time you add/create a element a new tree is created in the HTML

===============================
TYpes OF DOM 

>> SHADOW DOM 

>>  NORMAL DOM 

>> VIRTUAL DOM 

============

VIRTUAL DOM 

>> it is faster 

>> it is light weight version of DOM 

>> React Js internally uses VIrtual DOM 

>>  RENDERING :      Updating changes to Webpage is called as RENDERING.
or making changes to a webpage is called as rendering

>>  In React react is powered with LIVE RELOAD server. Server POrt Will be 3000.

>>  NPM start fro dev environment 

>> NPM build strt fro production enviro




































